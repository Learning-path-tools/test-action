name: Dynamic Matrix
on: 
    workflow_dispatch:
        inputs:
            os:
                description: 'Operating System'
                required: true
                default: 'ubuntu-latest'
                type: string
            node-version:
                description: 'Node.js version'
                required: true
                default: '14,15,16'
                type: string

jobs:
    prepare-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix-arrays: ${{ steps.matrix-arrays.outputs.result }}
        steps:
              - uses: actions/github-script@v6
                id: matrix-arrays
                with: 
                    script: "return {os: context.payload.inputs['os'].split(','), 'node-version': context.payload.inputs['node-version'].split(',')}"
                    result-encoding: json
              - run: echo "${{ steps.matrix-arrays.outputs.result }}"
              - run: echo "step-output=value 2" >> $GITHUB_OUTPUT
                id: step-1
              - run: echo "step-output=value 3" >> $GITHUB_OUTPUT
                id: step-2 
              - run: |
                  echo '${{steps.step-1.outputs.step-output}}'
                  echo '${{steps.step-2.outputs.step-output}}'
    node-matrix:
        needs: prepare-matrix
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: ${{ fromJson(needs.prepare-matrix.outputs.matrix-arrays).os }}
                node-version: ${{ fromJson(needs.prepare-matrix.outputs.matrix-arrays).node-version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Run tests
              run: |
                  echo "Running tests on ${{ matrix.os }} with Node.js version ${{ matrix['node-version'] }}"